# Count how many nodes are in a tree
# O((log(n))^2) time complexity

def getLeftDepth(root):
    if root.left is None:
        return 1
    else:
        return 1 + getLeftDepth(root.left)

def getRightDepth(root):
    if root.right is None:
        return 1
    else:
        return 1 + getRightDepth(root.right)

def countNodes(root):
    leftDepth = getLeftDepth(root)
    rightDepth = getRightDepth(root)
    
    if leftDepth == rightDepth:
        return 2 ** (leftDepth + 1) - 1
    else:
        return 1 + countNodes(root.left) + countNodes(root.right)
for i in range(16):
    n = graph.add_node(i)
    n.set_color(Color.BLACK)
    
graph.add_edge(graph.node(0), graph.node(1))
graph.add_edge(graph.node(0), graph.node(2))
graph.add_edge(graph.node(1), graph.node(3))
graph.add_edge(graph.node(2), graph.node(4))
graph.add_edge(graph.node(3), graph.node(5))
graph.add_edge(graph.node(4), graph.node(5))

graph.add_edge(graph.node(0), graph.node(6))

graph.add_edge(graph.node(6), graph.node(7))
graph.add_edge(graph.node(7), graph.node(8))
graph.add_edge(graph.node(8), graph.node(9))
graph.add_edge(graph.node(6), graph.node(11))
graph.add_edge(graph.node(9), graph.node(10))
graph.add_edge(graph.node(10), graph.node(11))

graph.add_edge(graph.node(1), graph.node(12))
graph.add_edge(graph.node(7), graph.node(13))
graph.add_edge(graph.node(12), graph.node(13))

graph.add_edge(graph.node(2), graph.node(15))
graph.add_edge(graph.node(11), graph.node(14))
graph.add_edge(graph.node(14), graph.node(15))

# Uncomment the below line to create an impurity
#graph.add_edge(graph.node(2), graph.node(6))

'''
while there are items in the stack
    pop the top of the stack in current_node
    mark current_node as seen
    if the current_node is uncoloured then
        color it red
    end if
    for each adjacent node to current_node
        if it is the same color as current_node then
            return False
        else if current_node is red then
            color adjacent node blue
        else
            color adjacent node red
        end if
        if the adjacent has not been seen then
            push it onto the stack
'''

def colour():
    stack = []
    seen = {}
    stack.append(graph.node(0))
    uncoloured = stack[0].color()
    while len(stack) != 0:
        current = stack.pop()
        seen[current] = True
        if current.color() == uncoloured:
            current.set_color(color = Color.RED)
        for node in current.adjacent_nodes():
            if node.color() == current.color():
                return False
            elif current.color() == Color.RED:
                node.set_color(color = Color.BLUE)
            else:
                node.set_color(color = Color.RED)
            if node not in seen:
                stack.append(node)
    return True
print(colour())

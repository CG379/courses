--altaccumulate CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" EXTRA_LATENCY=0 LPM_REPRESENTATION="UNSIGNED" WIDTH_IN=8 WIDTH_OUT=8 aclr clken clock data result sign_data
--VERSION_BEGIN 18.1 cbx_altaccumulate 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION fiftyfivenm_lcell_comb (cin, dataa, datab, datac, datad)
WITH ( DONT_TOUCH, LUT_MASK, SUM_LUTC_INPUT)
RETURNS ( combout, cout);

--synthesis_resources = lut 8 reg 8 
SUBDESIGN accum_4uk
( 
	aclr	:	input;
	clken	:	input;
	clock	:	input;
	data[7..0]	:	input;
	result[7..0]	:	output;
	sign_data	:	input;
) 
VARIABLE 
	acc_cella[7..0] : fiftyfivenm_lcell_comb
		WITH (
			LUT_MASK = "96E8",
			SUM_LUTC_INPUT = "cin"
		);
	acc_ffa[7..0] : dffe;
	data_wire[7..0]	: WIRE;

BEGIN 
	acc_cella[].cin = ( acc_cella[6..0].cout, B"0");
	acc_cella[].dataa = acc_ffa[].q;
	acc_cella[].datab = data_wire[];
	acc_cella[].datad = B"11111111";
	acc_ffa[].clk = clock;
	acc_ffa[].clrn = (! aclr);
	acc_ffa[].d = acc_cella[].combout;
	acc_ffa[].ena = clken;
	data_wire[] = data[];
	result[] = acc_ffa[].q;
END;
--VALID FILE

The input array could be in any order. The best case is the same as the worst case therefore it would run O(nlogn) time.  	Since the possible game states have been outlined, the algorithm can assume that the max and min player are rational. The score of each state can be determined by taking the highest score of the the child nodes if it is a the maximisers turn and the lowest if it is a minimiser. Stella can then traverse down the tree, picking the child node with the highest value. 	Can be used to give an approximate solution in less time than the optimal one. For example travelling salesmen problem. A random path can be optimised using simulated annealing to get a good approximate path. 	Represent the problem as a tree. Each leaf node is a completed path, the root node is a contains one node and each child node connects two nodes till they reach a leaf node. The leaf node connects back to the root node. When a solution is found it is recorded along with its weight if it is less than the current solution. When the tree creates a path that costs more it stops exploring that route.
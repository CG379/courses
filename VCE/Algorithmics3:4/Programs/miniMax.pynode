start = graph.add_node(6)


def minimax(node, depth, player):
    if node.id() == 0 or depth == 0:
        return player
    if player == 1:
        bestValue = float("-inf")
        state = node.id()
        options = []
        for i in range(1,3):
            options.append(graph.add_node(state-i))
            graph.add_edge(node, options[i-1])
        for option in options:
            print(option)
            v = minimax(option, depth-1, 0)
            if v > bestValue:
                bestValue = v
        return bestValue
    else:
        bestValue = float("inf")
        for i in range(1,3):
            options.append(graph.add_node(state-i))
        for option in options:
            graph.add_edge(node, option)
            v = minimax(option, depth-1, 1)
            if v < bestValue:
                bestValue = v
        return bestValue

minimax(start, 6, 1)
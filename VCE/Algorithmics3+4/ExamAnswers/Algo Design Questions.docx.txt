Each intersection and fire-station is a node. The roads between each intersection edges. Edge weights can represent travel time on the road. 	lower bound E = V-1. 
This results in Dijkstra's having O(V LogV) time complexity, running on every fire station (F) gives  O(V*F LogV)
Floyd's still has a O(V^3)
Therefore, in a lower bound situation Dijkstra's is the optimal algorithm

Upper bound E = (V * (V-1))/2
Therefore, Dijkstra's has O(V^2 LogV) time complexity, running on every node gives  O(V^2 * F LogV)
Floyd's still has a O(V^3)
since F can be expressed in terms of V, the upper bound Floyd-warshall is the optimal algorithm. 	start with one tower i distance away from the lighthouse and check if it provides coverage
repeat this with another tower till full coverage is reached. Record the number of towers once coverage is reached. Chose the smallest number.  	The brute force approach is a combinatorial explosion. The time complexity is at lease O(n^2). To be feasible the time complexity has to be less than or equal to polynomial time complexity, P class. Therefore, it is not feasible for large input sets. 	Greedy		It is a version of the knapsack problem. The lengths are the weights or each item and the total amount of road is the knapsack size. The problem runs in O(nw) meaning it will take 100 * 3000 = 300000 operations. This is tractable for computers. 	calculate the ratio of cost to length of each company
Sort the businesses and select the businesses with the lowest one until the 300km has been fulfilled
This is not optimal and will create a sub-optimal answer					This is an np-complete problem called graph colouring. Each material is a node and edges between node show that they are next to each other. 
A greedy approach were you randomly pick a start node and colour it. Then colour the neighbours with the lowest value colour that doesn't conflict with its neighbours.
import random
from queue import PriorityQueue
nodes = [[0,45,167], [1,208,179], [2,127,176], [3,164,252], [4,79,242], [5,117,318], [6,197,331]]
for n in nodes:
    new_node = graph.add_node(id =n[0])
    new_node.set_position(n[1], n[2], relative = False)

edges = [[0,2,7], [1,2,8], [3,1,5], [4,3,15], [3,2,7], [0,4,5], [2,4,9], [5,4,6], [5,3,8], [6,5,11], [6,3,9]]
for e in edges:
    n1 = graph.node(e[0])
    n2 = graph.node(e[1])
    weight = e[2]
    new_edge = graph.add_edge(n1, n2,weight)

q = PriorityQueue()

start = random.choice(graph.nodes())
def visit(node):
    node.set_attribute("seen", True)
    for edge in node.incident_edges():
        if not edge.attribute("seen"):
            edge.set_attribute("seen", True)
            q.put((edge.weight(), edge))
visit(start)

while not q.empty():
    temp = q.get()[1]
    if temp.source().attribute("seen") and temp.target().attribute("seen"):
        continue
    if temp.source().attribute("seen"):
        adjNode = temp.source()
    else:
        adjNode = temp.target()
    temp.traverse(adjNode)
    visit(adjNode)

# https://careerkarma.com/blog/python-priority-queue/
# Traverse node 
# Add edges to pq
# Get smallest edge and traverse
# Check if all node traversed

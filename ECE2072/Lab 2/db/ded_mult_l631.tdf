--alt_ded_mult_y CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" dedicated_multiplier_circuitry="YES" device_family="MAX 10" dsp_block_balancing="Auto" input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" level=0 output_reg="UNREGISTERED" pipeline=0 representation_a="UNSIGNED" representation_b="UNSIGNED" sub_dedicated_multiplier_circuitry="YES" width_a=4 width_b=4 dataa datab result
--VERSION_BEGIN 18.1 cbx_alt_ded_mult_y 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_padd 2018:09:12:13:04:24:SJ cbx_parallel_add 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION fiftyfivenm_mac_mult (aclr, clk, dataa[dataa_width-1..0], datab[datab_width-1..0], ena, signa, signb)
WITH ( dataa_clock, dataa_width, datab_clock, datab_width, signa_clock, signb_clock)
RETURNS ( dataout[dataa_width+datab_width-1..0]);
FUNCTION fiftyfivenm_mac_out (aclr, clk, dataa[dataa_width-1..0], ena)
WITH ( dataa_width = 0, output_clock)
RETURNS ( dataout[dataa_width-1..0]);
FUNCTION dffpipe_s1c (d[7..0])
RETURNS ( q[7..0]);

--synthesis_resources = dsp_9bit 1 
SUBDESIGN ded_mult_l631
( 
	dataa[3..0]	:	input;
	datab[3..0]	:	input;
	result[7..0]	:	output;
) 
VARIABLE 
	mac_mult3 : fiftyfivenm_mac_mult
		WITH (
			dataa_width = 4,
			datab_width = 4
		);
	mac_out4 : fiftyfivenm_mac_out
		WITH (
			dataa_width = 8
		);
	pre_result : dffpipe_s1c;
	aclr[3..0]	: NODE;
	x_dataa[3..0]	: WIRE;
	x_datab[3..0]	: WIRE;
	x_signa[0..0]	: WIRE;
	x_signb[0..0]	: WIRE;

BEGIN 
	mac_mult3.aclr = aclr[0..0];
	mac_mult3.dataa[] = ( x_dataa[]);
	mac_mult3.datab[] = ( x_datab[]);
	mac_mult3.signa = x_signa[];
	mac_mult3.signb = x_signb[];
	mac_out4.dataa[] = ( mac_mult3.dataout[7..0]);
	pre_result.d[7..0] = mac_out4.dataout[7..0];
	aclr[] = GND;
	result[] = pre_result.q[];
	x_dataa[] = dataa[];
	x_datab[] = datab[];
	x_signa[] = B"0";
	x_signb[] = B"0";
END;
--VALID FILE

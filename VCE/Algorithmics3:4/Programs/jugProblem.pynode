# Have to get 6 cups worth in one of the jugs
# First co-ordinate = 9 cups worth 
# Second co-ordinate = 4 cups worth
base = graph.add_node("0,0")
state = graph.add_node("9,4")
# Pathway 9 Nodes
state0 = graph.add_node("9,0")
state1 = graph.add_node("5,4")
state2 = graph.add_node("5,0")
state3 = graph.add_node("1,4")
state4 = graph.add_node("1,0")
state5 = graph.add_node("9,1")
state6 = graph.add_node("6,4")


# Pathway 4 Nodes
stateA = graph.add_node("0,4")
stateB = graph.add_node("4,0")
stateC = graph.add_node("4,4")
stateD = graph.add_node("8,0")
stateE = graph.add_node("8,4")
stateF = graph.add_node("0,3")
stateG = graph.add_node("3,0")
stateH = graph.add_node("3,4")
stateI = graph.add_node("7,0")
stateJ = graph.add_node("7,4")
stateK = graph.add_node("9,2")
stateL = graph.add_node("0,2")
stateM = graph.add_node("2,0")
stateN = graph.add_node("2,4")
stateO = graph.add_node("6,0")


# Pathway from 9
e = graph.add_edge(base, state0, directed=True)
e0 = graph.add_edge(state0, state1, directed=True)
e1 = graph.add_edge(state1, state2, directed=True)
e2 = graph.add_edge(state2, state3, directed=True)
e3 = graph.add_edge(state3, state4, directed=True)
e4 = graph.add_edge(state4, state5, directed=True)
e5 = graph.add_edge(state5, state6, directed=True)

test = graph.add_edge(base, state, directed=True)

# Pathway from 4
eA = graph.add_edge(base, stateA, directed=True)
eB = graph.add_edge(stateA, stateB, directed=True)
eC = graph.add_edge(stateB, stateC, directed=True)
eD = graph.add_edge(stateC, stateD, directed=True)
eE = graph.add_edge(stateD, stateE, directed=True)
eF = graph.add_edge(stateE, stateF, directed=True)
eG = graph.add_edge(stateF, stateG, directed=True)
eH = graph.add_edge(stateG, stateH, directed=True)
eI = graph.add_edge(stateH, stateI, directed=True)
eJ = graph.add_edge(stateI, stateJ, directed=True)
eK = graph.add_edge(stateJ, stateK, directed=True)
eL = graph.add_edge(stateK, stateL, directed=True)
eM = graph.add_edge(stateL, stateM, directed=True)
eN = graph.add_edge(stateM, stateN, directed=True)
eO = graph.add_edge(stateN, stateO, directed=True)
end = graph.add_edge(state6, stateO, directed=True)

# Traversing Path from 4
eA.traverse()
pause(500)
eB.traverse()
pause(500)
eC.traverse()
pause(500)
eD.traverse()
pause(500)
eE.traverse()
pause(500)
eF.traverse()
pause(500)
eG.traverse()
pause(500)
eH.traverse()
pause(500)
eI.traverse()
pause(500)
eJ.traverse()
pause(500)
eK.traverse()
pause(500)
eL.traverse()
pause(500)
eM.traverse()
pause(500)
eN.traverse()
pause(500)
eO.traverse()

# Traversing Path from 9
e.traverse()
pause(500)
e0.traverse()
pause(500)
e1.traverse()
pause(500)
e2.traverse()
pause(500)
e3.traverse()
pause(500)
e4.traverse()
pause(500)
e5.traverse()
pause(500)
end.traverse()




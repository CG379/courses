fun to_the_n ( n,x)=
    if n = 0
    then x
    else 2 * to_the_n(n-1,x)

fun nth_tail_lame (n, xs) =
    if n = 0
    then xs
    else tl(nth_tail_lame(n-1, xs)


 fun n_times (f, n , x) =
     if n = 0
     then x
     else f (n_times(f,n-1,x))



 fun triple_n_times (n,x) =
     n_times((fn x => 3*x),n,x)


 fun map (f, xs) =
     case xs of
	 [] => []
       | x::xs' => (f x)::map(f,xs')


 fun filter(f, xs) =
     case xs of
	 [] => []
       | x::xs' => if f x
		   then x::(filter (f, xs'))
		   else filter(f,xs')



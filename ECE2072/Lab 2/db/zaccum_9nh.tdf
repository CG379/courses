--alt_zaccum CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" EXTRA_LATENCY=0 WIDTH_IN=8 WIDTH_OUT=8 aclr clken clock data result sign_data CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 18.1 cbx_alt_zaccum 2018:09:12:13:04:24:SJ cbx_altaccumulate 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION accum_4uk (aclr, clken, clock, data[7..0], sign_data)
RETURNS ( result[7..0]);

--synthesis_resources = lut 8 reg 8 
SUBDESIGN zaccum_9nh
( 
	aclr	:	input;
	clken	:	input;
	clock	:	input;
	data[7..0]	:	input;
	result[7..0]	:	output;
	sign_data	:	input;
) 
VARIABLE 
	accum : accum_4uk;

BEGIN 
	accum.aclr = aclr;
	accum.clken = clken;
	accum.clock = clock;
	accum.data[] = data[];
	accum.sign_data = sign_data;
	result[] = accum.result[];
END;
--VALID FILE
